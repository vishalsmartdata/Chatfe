// Generated by data binding compiler. Do not edit!
package com.sdei.chafte.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.gigamole.library.ShadowLayout;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.sdei.chafte.R;
import com.sdei.chafte.ui.authentication.login.LoginVM;
import com.sdei.chafte.utils.custom.blinkingloader.BlinkingLoader;
import com.wang.avi.AVLoadingIndicatorView;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class DummyBinding extends ViewDataBinding {
  @NonNull
  public final AVLoadingIndicatorView avi;

  @NonNull
  public final BlinkingLoader blinkingLoader;

  @NonNull
  public final ShadowLayout btn;

  @NonNull
  public final TextInputLayout emailTil;

  @NonNull
  public final TextInputEditText etEmail;

  @NonNull
  public final AppCompatButton loginTv;

  @NonNull
  public final ConstraintLayout parent;

  @NonNull
  public final TextInputLayout passwordTil;

  @NonNull
  public final TextView textView;

  @NonNull
  public final TextView textView2;

  @NonNull
  public final TextView textView3;

  @Bindable
  protected LoginVM mVm;

  @Bindable
  protected String mA;

  @Bindable
  protected String mB;

  @Bindable
  protected String mC;

  protected DummyBinding(Object _bindingComponent, View _root, int _localFieldCount,
      AVLoadingIndicatorView avi, BlinkingLoader blinkingLoader, ShadowLayout btn,
      TextInputLayout emailTil, TextInputEditText etEmail, AppCompatButton loginTv,
      ConstraintLayout parent, TextInputLayout passwordTil, TextView textView, TextView textView2,
      TextView textView3) {
    super(_bindingComponent, _root, _localFieldCount);
    this.avi = avi;
    this.blinkingLoader = blinkingLoader;
    this.btn = btn;
    this.emailTil = emailTil;
    this.etEmail = etEmail;
    this.loginTv = loginTv;
    this.parent = parent;
    this.passwordTil = passwordTil;
    this.textView = textView;
    this.textView2 = textView2;
    this.textView3 = textView3;
  }

  public abstract void setVm(@Nullable LoginVM vm);

  @Nullable
  public LoginVM getVm() {
    return mVm;
  }

  public abstract void setA(@Nullable String a);

  @Nullable
  public String getA() {
    return mA;
  }

  public abstract void setB(@Nullable String b);

  @Nullable
  public String getB() {
    return mB;
  }

  public abstract void setC(@Nullable String c);

  @Nullable
  public String getC() {
    return mC;
  }

  @NonNull
  public static DummyBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup root,
      boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.dummy, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static DummyBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup root,
      boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<DummyBinding>inflateInternal(inflater, R.layout.dummy, root, attachToRoot, component);
  }

  @NonNull
  public static DummyBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.dummy, null, false, component)
   */
  @NonNull
  @Deprecated
  public static DummyBinding inflate(@NonNull LayoutInflater inflater, @Nullable Object component) {
    return ViewDataBinding.<DummyBinding>inflateInternal(inflater, R.layout.dummy, null, false, component);
  }

  public static DummyBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static DummyBinding bind(@NonNull View view, @Nullable Object component) {
    return (DummyBinding)bind(component, view, R.layout.dummy);
  }
}
